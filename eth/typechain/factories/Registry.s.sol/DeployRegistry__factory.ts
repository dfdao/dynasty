/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DeployRegistry,
  DeployRegistryInterface,
} from "../../Registry.s.sol/DeployRegistry";

const _abi = [
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "run",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff1916600117905534801561001d57600080fd5b50610ed18061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633a76846314610046578063c04062261461007e578063f8ccbf4714610088575b600080fd5b610061737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100866100a5565b005b6000546100959060ff1681565b6040519015158152602001610075565b604080516302bf260160e61b81529051737109709ecfa91a80626ff3989d68f67f5b1dd12d9163afc9804091600480830192600092919082900301818387803b1580156100f157600080fd5b505af1158015610105573d6000803e3d6000fd5b505050506000604051610117906101b5565b604051809103906000f080158015610133573d6000803e3d6000fd5b5090507f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c60601b60601c6001600160a01b03166376eadd366040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561019a57600080fd5b505af11580156101ae573d6000803e3d6000fd5b5050505050565b610cd9806101c38339019056fe608060405234801561001057600080fd5b5060008054336001600160a01b031991821681178355808352600260205260408320805460ff1916600190811790915560048054918201815584527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018054909216179055610c5490819061008590396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638abc0568116100715780638abc0568146101b4578063a34d42b8146101c7578063c9d957eb146101da578063ce606ee0146101ed578063e8f846e314610200578063e9523c971461021357600080fd5b80630c5ab9a3146100ae57806314bfd6d01461012c57806324d7806c146101575780632c1204a61461018a5780634b0bddd21461019f575b600080fd5b6100f66100bc366004610a43565b600160208190526000918252604090912080549181015460028201546003830154600490930154919290916001600160a01b039091169085565b604080519586526020860194909452928401919091526001600160a01b03166060830152608082015260a0015b60405180910390f35b61013f61013a366004610a43565b610228565b6040516001600160a01b039091168152602001610123565b61017a610165366004610a78565b60026020526000908152604090205460ff1681565b6040519015158152602001610123565b610192610252565b6040516101239190610a9a565b6101b26101ad366004610b11565b6102e6565b005b6101b26101c2366004610a43565b610465565b6101b26101d5366004610a78565b6105b0565b6100f66101e8366004610a43565b610677565b60005461013f906001600160a01b031681565b6101b261020e366004610b4d565b6106c4565b61021b610944565b6040516101239190610b94565b6004818154811061023857600080fd5b6000918252602090912001546001600160a01b0316905081565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156102dd5760008481526020908190206040805160a08101825260058602909201805483526001808201548486015260028201549284019290925260038101546001600160a01b031660608401526004015460808301529083529092019101610276565b50505050905090565b6000546001600160a01b0316331461033a5760405162461bcd60e51b81526020600482015260126024820152712737ba1031b7b73a3930b1ba1037bbb732b960711b60448201526064015b60405180910390fd5b80156103b1576001600160a01b03821660009081526002602052604090205460ff166103ac57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0384161790555b61043a565b60005b60045481101561043857826001600160a01b0316600482815481106103db576103db610be1565b6000918252602090912001546001600160a01b031603610426576004818154811061040857610408610be1565b600091825260209091200180546001600160a01b0319169055610438565b8061043081610bf7565b9150506103b4565b505b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b3360009081526002602052604090205460ff166104b05760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b6044820152606401610331565b60005b6003548110156105ac5781600382815481106104d1576104d1610be1565b9060005260206000209060050201600201540361059a576000828152600160208190526040822082815590810182905560028101829055600380820180546001600160a01b031916905560049091019190915580548290811061053657610536610be1565b60009182526020822060059091020181815560018101829055600281018290556003810180546001600160a01b031916905560040181905560405183917f8657075b79e2556f40379691c9aa0cc938a18690db0bb5eeded6c9887dc4cf2391a25050565b806105a481610bf7565b9150506104b3565b5050565b6000546001600160a01b031633146105ff5760405162461bcd60e51b81526020600482015260126024820152712737ba1031b7b73a3930b1ba1037bbb732b960711b6044820152606401610331565b6001600160a01b0381166106555760405162461bcd60e51b815260206004820152601c60248201527f4f776e65722063616e6e6f74206265207a65726f2061646472657373000000006044820152606401610331565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003818154811061068757600080fd5b600091825260209091206005909102018054600182015460028301546003840154600490940154929450909290916001600160a01b039091169085565b3360009081526002602052604090205460ff1661070f5760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b6044820152606401610331565b61071985856109a6565b61075e5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073746172742f656e642074696d6560501b6044820152606401610331565b6001600160a01b0382166107c25760405162461bcd60e51b815260206004820152602560248201527f506172656e7420616464726573732063616e6e6f74206265207a65726f206164604482015264647265737360d81b6064820152608401610331565b6040805160a08101825286815260208082018781528284018781526001600160a01b03808816606086019081526080860188815260008b81526001968790528881209751885594518787019081559351600288019081559151600380890180549286166001600160a01b0319938416178155925160048a0190815581549889018255908752975460059097027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b81019790975593547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c87015590547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d860155547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e85018054909316911617905591547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f90910155905184917f1f4ed5821d5332dec0a70323c39620da696dc13a3c8aef84832ab1e7351dbdb891a25050505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561099c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161097e575b5050505050905090565b60008183106001825b600354811015610a2f5784600382815481106109cd576109cd610be1565b906000526020600020906005020160000154108015610a0f575085600382815481106109fb576109fb610be1565b906000526020600020906005020160010154115b15610a1d5760009150610a2f565b80610a2781610bf7565b9150506109af565b50818015610a3a5750805b95945050505050565b600060208284031215610a5557600080fd5b5035919050565b80356001600160a01b0381168114610a7357600080fd5b919050565b600060208284031215610a8a57600080fd5b610a9382610a5c565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610b0457815180518552868101518786015285810151868601526060808201516001600160a01b0316908601526080908101519085015260a09093019290850190600101610ab7565b5091979650505050505050565b60008060408385031215610b2457600080fd5b610b2d83610a5c565b915060208301358015158114610b4257600080fd5b809150509250929050565b600080600080600060a08688031215610b6557600080fd5b853594506020860135935060408601359250610b8360608701610a5c565b949793965091946080013592915050565b6020808252825182820181905260009190848201906040850190845b81811015610bd55783516001600160a01b031683529284019291840191600101610bb0565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610c1757634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122065d37790f595a17451beb9f61d97e4c65db034b4c5d78a2287fb2aa25a9d02e764736f6c63430008100033a26469706673582212209cb8cff27ed6db1d9dff19b6ea40b2e04aa010109cf2b772ce8e2cd8635c86cc64736f6c63430008100033";

type DeployRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeployRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeployRegistry__factory extends ContractFactory {
  constructor(...args: DeployRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DeployRegistry> {
    return super.deploy(overrides || {}) as Promise<DeployRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DeployRegistry {
    return super.attach(address) as DeployRegistry;
  }
  override connect(signer: Signer): DeployRegistry__factory {
    return super.connect(signer) as DeployRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeployRegistryInterface {
    return new utils.Interface(_abi) as DeployRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeployRegistry {
    return new Contract(address, _abi, signerOrProvider) as DeployRegistry;
  }
}
