/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidURI",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentTokenURI",
    type: "error",
  },
  {
    inputs: [],
    name: "WithdrawTransfer",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "bulkMintTo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "payee",
        type: "address",
      },
    ],
    name: "withdrawPayments",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001adc38038062001adc8339810160408190526200003491620001a3565b82826000620000448382620002c3565b506001620000538282620002c3565b505050620000706200006a6200008860201b60201c565b6200008c565b60076200007e8282620002c3565b505050506200038f565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200010657600080fd5b81516001600160401b0380821115620001235762000123620000de565b604051601f8301601f19908116603f011681019082821181831017156200014e576200014e620000de565b816040528381526020925086838588010111156200016b57600080fd5b600091505b838210156200018f578582018301518183018401529082019062000170565b600093810190920192909252949350505050565b600080600060608486031215620001b957600080fd5b83516001600160401b0380821115620001d157600080fd5b620001df87838801620000f4565b94506020860151915080821115620001f657600080fd5b6200020487838801620000f4565b935060408601519150808211156200021b57600080fd5b506200022a86828701620000f4565b9150509250925092565b600181811c908216806200024957607f821691505b6020821081036200026a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002be57600081815260208120601f850160051c81016020861015620002995750805b601f850160051c820191505b81811015620002ba57828155600101620002a5565b5050505b505050565b81516001600160401b03811115620002df57620002df620000de565b620002f781620002f0845462000234565b8462000270565b602080601f8311600181146200032f5760008415620003165750858301515b600019600386901b1c1916600185901b178555620002ba565b600085815260208120601f198616915b8281101562000360578886015182559484019460019091019084016200033f565b50858210156200037f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61173d806200039f6000396000f3fe6080604052600436106101285760003560e01c80636c0360eb116100ab578063a22cb4651161006f578063a22cb46514610328578063a4dcbd2314610348578063b88d4fde14610368578063c87b56dd14610388578063e985e9c5146103a8578063f2fde38b146103e357600080fd5b80636c0360eb146102ab57806370a08231146102c0578063715018a6146102e05780638da5cb5b146102f557806395d89b411461031357600080fd5b8063095ea7b3116100f2578063095ea7b31461020957806323b872dd1461022b57806331b3eb941461024b57806342842e0e1461026b5780636352211e1461028b57600080fd5b806275a3171461012d5780629a9b7b1461015357806301ffc9a71461016957806306fdde0314610199578063081812fc146101bb575b600080fd5b61014061013b36600461115a565b610403565b6040519081526020015b60405180910390f35b34801561015f57600080fd5b5061014060085481565b34801561017557600080fd5b506101896101843660046111c0565b61047f565b604051901515815260200161014a565b3480156101a557600080fd5b506101ae6104d1565b60405161014a91906111dd565b3480156101c757600080fd5b506101f16101d636600461122b565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161014a565b34801561021557600080fd5b50610229610224366004611244565b61055f565b005b34801561023757600080fd5b50610229610246366004611270565b610646565b34801561025757600080fd5b506102296102663660046112b1565b61080d565b34801561027757600080fd5b50610229610286366004611270565b61088e565b34801561029757600080fd5b506101f16102a636600461122b565b61095e565b3480156102b757600080fd5b506101ae6109b5565b3480156102cc57600080fd5b506101406102db3660046112b1565b6109c2565b3480156102ec57600080fd5b50610229610a25565b34801561030157600080fd5b506006546001600160a01b03166101f1565b34801561031f57600080fd5b506101ae610a39565b34801561033457600080fd5b506102296103433660046112ce565b610a46565b61035b61035636600461130c565b610ab2565b60405161014a91906113d6565b34801561037457600080fd5b5061022961038336600461141a565b610bcd565b34801561039457600080fd5b506101ae6103a336600461122b565b610c92565b3480156103b457600080fd5b506101896103c33660046114b9565b600560209081526000928352604080842090915290825290205460ff1681565b3480156103ef57600080fd5b506102296103fe3660046112b1565b610d8e565b600061040d610e07565b6007805461041a906114e7565b905060000361043c57604051633ba0191160e01b815260040160405180910390fd5b600060086000815461044d90611521565b9182905550600081815260096020526040902090915061046d8482611596565b506104788482610e61565b9392505050565b60006301ffc9a760e01b6001600160e01b0319831614806104b057506380ac58cd60e01b6001600160e01b03198316145b806104cb5750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546104de906114e7565b80601f016020809104026020016040519081016040528092919081815260200182805461050a906114e7565b80156105575780601f1061052c57610100808354040283529160200191610557565b820191906000526020600020905b81548152906001019060200180831161053a57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b0316338114806105a857506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6105ea5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600260205260409020546001600160a01b0384811691161461069c5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016105e1565b6001600160a01b0382166106e65760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016105e1565b336001600160a01b038416148061072057506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061074157506000818152600460205260409020546001600160a01b031633145b61077e5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016105e1565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610815610e07565b60405147906000906001600160a01b0384169083908381818185875af1925050503d8060008114610862576040519150601f19603f3d011682016040523d82523d6000602084013e610867565b606091505b50509050806108895760405163d23a9e8960e01b815260040160405180910390fd5b505050565b610899838383610646565b6001600160a01b0382163b15806109425750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610912573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109369190611656565b6001600160e01b031916145b6108895760405162461bcd60e51b81526004016105e190611673565b6000818152600260205260409020546001600160a01b0316806109b05760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016105e1565b919050565b600780546104de906114e7565b60006001600160a01b038216610a095760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016105e1565b506001600160a01b031660009081526003602052604090205490565b610a2d610e07565b610a376000610f31565b565b600180546104de906114e7565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6060610abc610e07565b6000835167ffffffffffffffff811115610ad857610ad86110a3565b604051908082528060200260200182016040528015610b01578160200160208202803683370190505b50905060078054610b11906114e7565b9050600003610b3357604051633ba0191160e01b815260040160405180910390fd5b60005b8451811015610bc5576000600860008154610b5090611521565b91829055506000818152600960205260409020909150610b708682611596565b50610b94868381518110610b8657610b8661169d565b602002602001015182610e61565b80838381518110610ba757610ba761169d565b60209081029190910101525080610bbd81611521565b915050610b36565b509392505050565b610bd8858585610646565b6001600160a01b0384163b1580610c6f5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610c209033908a908990899089906004016116b3565b6020604051808303816000875af1158015610c3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c639190611656565b6001600160e01b031916145b610c8b5760405162461bcd60e51b81526004016105e190611673565b5050505050565b60606000610c9f8361095e565b6001600160a01b031603610cc65760405163d872946b60e01b815260040160405180910390fd5b600060078054610cd5906114e7565b905011610cf157604051806020016040528060008152506104cb565b60008281526009602052604090208054610d0a906114e7565b80601f0160208091040260200160405190810160405280929190818152602001828054610d36906114e7565b8015610d835780601f10610d5857610100808354040283529160200191610d83565b820191906000526020600020905b815481529060010190602001808311610d6657829003601f168201915b505050505092915050565b610d96610e07565b6001600160a01b038116610dfb5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e1565b610e0481610f31565b50565b6006546001600160a01b03163314610a375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105e1565b610e6b8282610f83565b6001600160a01b0382163b1580610f115750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f059190611656565b6001600160e01b031916145b610f2d5760405162461bcd60e51b81526004016105e190611673565b5050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610fcd5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016105e1565b6000818152600260205260409020546001600160a01b0316156110235760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016105e1565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160a01b0381168114610e0457600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110e2576110e26110a3565b604052919050565b600082601f8301126110fb57600080fd5b813567ffffffffffffffff811115611115576111156110a3565b611128601f8201601f19166020016110b9565b81815284602083860101111561113d57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561116d57600080fd5b82356111788161108e565b9150602083013567ffffffffffffffff81111561119457600080fd5b6111a0858286016110ea565b9150509250929050565b6001600160e01b031981168114610e0457600080fd5b6000602082840312156111d257600080fd5b8135610478816111aa565b600060208083528351808285015260005b8181101561120a578581018301518582016040015282016111ee565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561123d57600080fd5b5035919050565b6000806040838503121561125757600080fd5b82356112628161108e565b946020939093013593505050565b60008060006060848603121561128557600080fd5b83356112908161108e565b925060208401356112a08161108e565b929592945050506040919091013590565b6000602082840312156112c357600080fd5b81356104788161108e565b600080604083850312156112e157600080fd5b82356112ec8161108e565b91506020830135801515811461130157600080fd5b809150509250929050565b6000806040838503121561131f57600080fd5b823567ffffffffffffffff8082111561133757600080fd5b818501915085601f83011261134b57600080fd5b813560208282111561135f5761135f6110a3565b8160051b61136e8282016110b9565b928352848101820192828101908a85111561138857600080fd5b958301955b848710156113b257863592506113a28361108e565b828252958301959083019061138d565b97505050860135925050808211156113c957600080fd5b506111a0858286016110ea565b6020808252825182820181905260009190848201906040850190845b8181101561140e578351835292840192918401916001016113f2565b50909695505050505050565b60008060008060006080868803121561143257600080fd5b853561143d8161108e565b9450602086013561144d8161108e565b935060408601359250606086013567ffffffffffffffff8082111561147157600080fd5b818801915088601f83011261148557600080fd5b81358181111561149457600080fd5b8960208285010111156114a657600080fd5b9699959850939650602001949392505050565b600080604083850312156114cc57600080fd5b82356114d78161108e565b915060208301356113018161108e565b600181811c908216806114fb57607f821691505b60208210810361151b57634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161154157634e487b7160e01b600052601160045260246000fd5b5060010190565b601f82111561088957600081815260208120601f850160051c8101602086101561156f5750805b601f850160051c820191505b8181101561158e5782815560010161157b565b505050505050565b815167ffffffffffffffff8111156115b0576115b06110a3565b6115c4816115be84546114e7565b84611548565b602080601f8311600181146115f957600084156115e15750858301515b600019600386901b1c1916600185901b17855561158e565b600085815260208120601f198616915b8281101561162857888601518255948401946001909101908401611609565b50858210156116465787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561166857600080fd5b8151610478816111aa565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea2646970667358221220055ca1ffbba37ce9968e158017c042da6a571cd2e6fccebf3bda79eb092b375a64736f6c63430008100033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(
      _name,
      _symbol,
      _baseURI,
      overrides || {}
    ) as Promise<NFT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _baseURI: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _baseURI,
      overrides || {}
    );
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
