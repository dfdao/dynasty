/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RegistryTest,
  RegistryTestInterface,
} from "../../Registry.t.sol/RegistryTest";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "configHash",
        type: "bytes32",
      },
    ],
    name: "GrandPrixAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "val",
        type: "uint256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256[]",
        name: "val",
        type: "int256[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "val",
        type: "address[]",
      },
    ],
    name: "log_named_array",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_SCRIPT",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testAddGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testCannotSetOwnerZero",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testNonAdminAddGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testNonOwnerSetOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testOverlappingTimes",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testOwnerisAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testSetOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testStartAfterEndTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vm",
    outputs: [
      {
        internalType: "contract Vm",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600080546201000162ff00ff19909116179055600980546001600160a01b0319908116600117909155600a8054909116600217905534801561004557600080fd5b50611fba806100556000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063853fe0ab1161008c578063d894f22911610066578063d894f22914610158578063f8ccbf4714610160578063fa7626d414610173578063fe145faa1461018057600080fd5b8063853fe0ab14610130578063ba414fa614610138578063d78f279d1461015057600080fd5b80630a9254e4146100d457806313459c34146100de5780632584af56146100e65780632f3de9c1146100ee5780633a768463146100f657806342cb4a4514610128575b600080fd5b6100dc610188565b005b6100dc61029c565b6100dc610385565b6100dc6104c3565b61010b600080516020611f4583398151915281565b6040516001600160a01b0390911681526020015b60405180910390f35b6100dc61060d565b6100dc610764565b6101406108dd565b604051901515815260200161011f565b6100dc6109fc565b6100dc610b53565b6000546101409062010000900460ff1681565b6000546101409060ff1681565b6100dc610c83565b6009546040516303223eab60e11b81526001600160a01b039091166004820152600080516020611f45833981519152906306447d5690602401600060405180830381600087803b1580156101db57600080fd5b505af11580156101ef573d6000803e3d6000fd5b505050506040516101ff90611126565b604051809103906000f08015801561021b573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604080516390c5013b60e01b81529051600080516020611f45833981519152916390c5013b91600480830192600092919082900301818387803b15801561028257600080fd5b505af1158015610296573d6000803e3d6000fd5b50505050565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f458339815191529063ca669fa790602401600060405180830381600087803b1580156102ef57600080fd5b505af1158015610303573d6000803e3d6000fd5b5050600854600954604051630935e01b60e21b81526001600160a01b039182166004820152911692506324d7806c9150602401602060405180830381865afa158015610353573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103779190611133565b6103835761038361115c565b565b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f458339815191529063ca669fa790602401600060405180830381600087803b1580156103d857600080fd5b505af11580156103ec573d6000803e3d6000fd5b505060408051808201825260128152712737ba1031b7b73a3930b1ba1037bbb732b960711b6020820152905163f28dceb360e01b8152600080516020611f45833981519152935063f28dceb392506104479190600401611196565b600060405180830381600087803b15801561046157600080fd5b505af1158015610475573d6000803e3d6000fd5b5050600854600954604051631469a85760e31b81526001600160a01b0391821660048201529116925063a34d42b891506024015b600060405180830381600087803b15801561028257600080fd5b600a5460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f458339815191529063ca669fa790602401600060405180830381600087803b15801561051657600080fd5b505af115801561052a573d6000803e3d6000fd5b505060408051808201825260098152682737ba1030b236b4b760b91b6020820152905163f28dceb360e01b8152600080516020611f45833981519152935063f28dceb3925061057c9190600401611196565b600060405180830381600087803b15801561059657600080fd5b505af11580156105aa573d6000803e3d6000fd5b505060085460405163e8f846e360e01b81526001600160a01b03909116925063e8f846e391506104a9906130399061303a90600080516020611f658339815191529073274c4753194d1b181ded46958f150ec15b5f604b906001906004016111c9565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f458339815191529063ca669fa790602401600060405180830381600087803b15801561066057600080fd5b505af1158015610674573d6000803e3d6000fd5b5050600854600a54604051631469a85760e31b81526001600160a01b0391821660048201529116925063a34d42b89150602401600060405180830381600087803b1580156106c157600080fd5b505af11580156106d5573d6000803e3d6000fd5b50505050610383600860009054906101000a90046001600160a01b03166001600160a01b031663ce606ee06040518163ffffffff1660e01b8152600401602060405180830381865afa15801561072f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075391906111f5565b600a546001600160a01b0316610ed6565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f458339815191529063ca669fa790602401600060405180830381600087803b1580156107b757600080fd5b505af11580156107cb573d6000803e3d6000fd5b505060405163248e63e160e11b815260016004820181905260248201526000604482018190526064820152600080516020611f45833981519152925063491cc7c29150608401600060405180830381600087803b15801561082b57600080fd5b505af115801561083f573d6000803e3d6000fd5b5050604051600080516020611f658339815191529250600091507fe5be5a92734b25a4ef3413dadc915d58282dbc14f980ec5c8e0ca2eefe6ae8e5908290a360085460405163e8f846e360e01b81526001600160a01b039091169063e8f846e3906104a9906130399061303a90600080516020611f658339815191529073274c4753194d1b181ded46958f150ec15b5f604b906001906004016111c9565b60008054610100900460ff16156108fd5750600054610100900460ff1690565b6000600080516020611f458339815191523b156109f75760408051600080516020611f45833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909161097f917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161121e565b60408051601f19818403018152908290526109999161124f565b6000604051808303816000865af19150503d80600081146109d6576040519150601f19603f3d011682016040523d82523d6000602084013e6109db565b606091505b50915050808060200190518101906109f39190611133565b9150505b919050565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f458339815191529063ca669fa790602401600060405180830381600087803b158015610a4f57600080fd5b505af1158015610a63573d6000803e3d6000fd5b50506040805180820182526016815275496e76616c69642073746172742f656e642074696d6560501b6020820152905163f28dceb360e01b8152600080516020611f45833981519152935063f28dceb39250610ac29190600401611196565b600060405180830381600087803b158015610adc57600080fd5b505af1158015610af0573d6000803e3d6000fd5b505060085460405163e8f846e360e01b81526001600160a01b03909116925063e8f846e391506104a99061303a9061303990600080516020611f658339815191529073274c4753194d1b181ded46958f150ec15b5f604b906001906004016111c9565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f458339815191529063ca669fa790602401600060405180830381600087803b158015610ba657600080fd5b505af1158015610bba573d6000803e3d6000fd5b5050604080518082018252601c81527f4f776e65722063616e6e6f74206265207a65726f2061646472657373000000006020820152905163f28dceb360e01b8152600080516020611f45833981519152935063f28dceb39250610c209190600401611196565b600060405180830381600087803b158015610c3a57600080fd5b505af1158015610c4e573d6000803e3d6000fd5b5050600854604051631469a85760e31b8152600060048201526001600160a01b03909116925063a34d42b891506024016104a9565b60095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f458339815191529063ca669fa790602401600060405180830381600087803b158015610cd657600080fd5b505af1158015610cea573d6000803e3d6000fd5b505060085460405163e8f846e360e01b81526001600160a01b03909116925063e8f846e39150610d4d906130399061303a90600080516020611f658339815191529073274c4753194d1b181ded46958f150ec15b5f604b906001906004016111c9565b600060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b505060095460405163ca669fa760e01b81526001600160a01b039091166004820152600080516020611f45833981519152925063ca669fa79150602401600060405180830381600087803b158015610dd257600080fd5b505af1158015610de6573d6000803e3d6000fd5b50506040805180820182526016815275496e76616c69642073746172742f656e642074696d6560501b6020820152905163f28dceb360e01b8152600080516020611f45833981519152935063f28dceb39250610e459190600401611196565b600060405180830381600087803b158015610e5f57600080fd5b505af1158015610e73573d6000803e3d6000fd5b505060085460405163e8f846e360e01b81526001600160a01b03909116925063e8f846e391506104a9906130399061304890600080516020611f658339815191529073274c4753194d1b181ded46958f150ec15b5f604b906001906004016111c9565b806001600160a01b0316826001600160a01b031614611022577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610f5c9060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526001600160a01b038316602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526001600160a01b038416602082015290517f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f9181900360800190a1611022611026565b5050565b600080516020611f458339815191523b156111155760408051600080516020611f45833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f19818403018152908290526110b4929160200161121e565b60408051601f19818403018152908290526110ce9161124f565b6000604051808303816000865af19150503d806000811461110b576040519150601f19603f3d011682016040523d82523d6000602084013e611110565b606091505b505050505b6000805461ff001916610100179055565b610cd98061126c83390190565b60006020828403121561114557600080fd5b8151801515811461115557600080fd5b9392505050565b634e487b7160e01b600052600160045260246000fd5b60005b8381101561118d578181015183820152602001611175565b50506000910152565b60208152600082518060208401526111b5816040850160208701611172565b601f01601f19169190910160400192915050565b948552602085019390935260408401919091526001600160a01b03166060830152608082015260a00190565b60006020828403121561120757600080fd5b81516001600160a01b038116811461115557600080fd5b6001600160e01b0319831681528151600090611241816004850160208701611172565b919091016004019392505050565b60008251611261818460208701611172565b919091019291505056fe608060405234801561001057600080fd5b5060008054336001600160a01b031991821681178355808352600260205260408320805460ff1916600190811790915560048054918201815584527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b018054909216179055610c5490819061008590396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638abc0568116100715780638abc0568146101b4578063a34d42b8146101c7578063c9d957eb146101da578063ce606ee0146101ed578063e8f846e314610200578063e9523c971461021357600080fd5b80630c5ab9a3146100ae57806314bfd6d01461012c57806324d7806c146101575780632c1204a61461018a5780634b0bddd21461019f575b600080fd5b6100f66100bc366004610a43565b600160208190526000918252604090912080549181015460028201546003830154600490930154919290916001600160a01b039091169085565b604080519586526020860194909452928401919091526001600160a01b03166060830152608082015260a0015b60405180910390f35b61013f61013a366004610a43565b610228565b6040516001600160a01b039091168152602001610123565b61017a610165366004610a78565b60026020526000908152604090205460ff1681565b6040519015158152602001610123565b610192610252565b6040516101239190610a9a565b6101b26101ad366004610b11565b6102e6565b005b6101b26101c2366004610a43565b610465565b6101b26101d5366004610a78565b6105b0565b6100f66101e8366004610a43565b610677565b60005461013f906001600160a01b031681565b6101b261020e366004610b4d565b6106c4565b61021b610944565b6040516101239190610b94565b6004818154811061023857600080fd5b6000918252602090912001546001600160a01b0316905081565b60606003805480602002602001604051908101604052809291908181526020016000905b828210156102dd5760008481526020908190206040805160a08101825260058602909201805483526001808201548486015260028201549284019290925260038101546001600160a01b031660608401526004015460808301529083529092019101610276565b50505050905090565b6000546001600160a01b0316331461033a5760405162461bcd60e51b81526020600482015260126024820152712737ba1031b7b73a3930b1ba1037bbb732b960711b60448201526064015b60405180910390fd5b80156103b1576001600160a01b03821660009081526002602052604090205460ff166103ac57600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0384161790555b61043a565b60005b60045481101561043857826001600160a01b0316600482815481106103db576103db610be1565b6000918252602090912001546001600160a01b031603610426576004818154811061040857610408610be1565b600091825260209091200180546001600160a01b0319169055610438565b8061043081610bf7565b9150506103b4565b505b6001600160a01b03919091166000908152600260205260409020805460ff1916911515919091179055565b3360009081526002602052604090205460ff166104b05760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b6044820152606401610331565b60005b6003548110156105ac5781600382815481106104d1576104d1610be1565b9060005260206000209060050201600201540361059a576000828152600160208190526040822082815590810182905560028101829055600380820180546001600160a01b031916905560049091019190915580548290811061053657610536610be1565b60009182526020822060059091020181815560018101829055600281018290556003810180546001600160a01b031916905560040181905560405183917f8657075b79e2556f40379691c9aa0cc938a18690db0bb5eeded6c9887dc4cf2391a25050565b806105a481610bf7565b9150506104b3565b5050565b6000546001600160a01b031633146105ff5760405162461bcd60e51b81526020600482015260126024820152712737ba1031b7b73a3930b1ba1037bbb732b960711b6044820152606401610331565b6001600160a01b0381166106555760405162461bcd60e51b815260206004820152601c60248201527f4f776e65722063616e6e6f74206265207a65726f2061646472657373000000006044820152606401610331565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003818154811061068757600080fd5b600091825260209091206005909102018054600182015460028301546003840154600490940154929450909290916001600160a01b039091169085565b3360009081526002602052604090205460ff1661070f5760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b6044820152606401610331565b61071985856109a6565b61075e5760405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073746172742f656e642074696d6560501b6044820152606401610331565b6001600160a01b0382166107c25760405162461bcd60e51b815260206004820152602560248201527f506172656e7420616464726573732063616e6e6f74206265207a65726f206164604482015264647265737360d81b6064820152608401610331565b6040805160a08101825286815260208082018781528284018781526001600160a01b03808816606086019081526080860188815260008b81526001968790528881209751885594518787019081559351600288019081559151600380890180549286166001600160a01b0319938416178155925160048a0190815581549889018255908752975460059097027fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b81019790975593547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85c87015590547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85d860155547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85e85018054909316911617905591547fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85f90910155905184917f1f4ed5821d5332dec0a70323c39620da696dc13a3c8aef84832ab1e7351dbdb891a25050505050565b6060600480548060200260200160405190810160405280929190818152602001828054801561099c57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161097e575b5050505050905090565b60008183106001825b600354811015610a2f5784600382815481106109cd576109cd610be1565b906000526020600020906005020160000154108015610a0f575085600382815481106109fb576109fb610be1565b906000526020600020906005020160010154115b15610a1d5760009150610a2f565b80610a2781610bf7565b9150506109af565b50818015610a3a5750805b95945050505050565b600060208284031215610a5557600080fd5b5035919050565b80356001600160a01b0381168114610a7357600080fd5b919050565b600060208284031215610a8a57600080fd5b610a9382610a5c565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610b0457815180518552868101518786015285810151868601526060808201516001600160a01b0316908601526080908101519085015260a09093019290850190600101610ab7565b5091979650505050505050565b60008060408385031215610b2457600080fd5b610b2d83610a5c565b915060208301358015158114610b4257600080fd5b809150509250929050565b600080600080600060a08688031215610b6557600080fd5b853594506020860135935060408601359250610b8360608701610a5c565b949793965091946080013592915050565b6020808252825182820181905260009190848201906040850190845b81811015610bd55783516001600160a01b031683529284019291840191600101610bb0565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610c1757634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122065d37790f595a17451beb9f61d97e4c65db034b4c5d78a2287fb2aa25a9d02e764736f6c634300081000330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d3f494381e86ad92969d331be13aebadb2a7f942a011253b2fa413c5143fa396ba2646970667358221220c0517740627e700008432b419910962dec81bc6f81b4036d0410d31cab1bec0c64736f6c63430008100033";

type RegistryTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistryTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegistryTest__factory extends ContractFactory {
  constructor(...args: RegistryTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RegistryTest> {
    return super.deploy(overrides || {}) as Promise<RegistryTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): RegistryTest {
    return super.attach(address) as RegistryTest;
  }
  override connect(signer: Signer): RegistryTest__factory {
    return super.connect(signer) as RegistryTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryTestInterface {
    return new utils.Interface(_abi) as RegistryTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RegistryTest {
    return new Contract(address, _abi, signerOrProvider) as RegistryTest;
  }
}
