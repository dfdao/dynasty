/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidURI",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentTokenURI",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "bulkMintTo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkOwner",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkTokenURI",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAdmins",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e6c38038062001e6c83398101604081905262000034916200018e565b8181600062000044838262000287565b50600162000053828262000287565b505060088054336001600160a01b031991821681179092556000828152600960205260408120805460ff19166001908117909155600a805491820181559091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a801805490911690911790555062000353915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000f157600080fd5b81516001600160401b03808211156200010e576200010e620000c9565b604051601f8301601f19908116603f01168101908282118183101715620001395762000139620000c9565b816040528381526020925086838588010111156200015657600080fd5b600091505b838210156200017a57858201830151818301840152908201906200015b565b600093810190920192909252949350505050565b60008060408385031215620001a257600080fd5b82516001600160401b0380821115620001ba57600080fd5b620001c886838701620000df565b93506020850151915080821115620001df57600080fd5b50620001ee85828601620000df565b9150509250929050565b600181811c908216806200020d57607f821691505b6020821081036200022e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028257600081815260208120601f850160051c810160208610156200025d5750805b601f850160051c820191505b818110156200027e5782815560010162000269565b5050505b505050565b81516001600160401b03811115620002a357620002a3620000c9565b620002bb81620002b48454620001f8565b8462000234565b602080601f831160018114620002f35760008415620002da5750858301515b600019600386901b1c1916600185901b1785556200027e565b600085815260208120601f198616915b82811015620003245788860151825594840194600190910190840162000303565b5085821015620003435787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611b0980620003636000396000f3fe60806040526004361061013e5760003560e01c80636352211e116100b6578063b88d4fde1161006f578063b88d4fde146103b3578063c87b56dd146103d3578063ce606ee0146103f3578063d517a06114610413578063e9523c9714610440578063e985e9c51461045557600080fd5b80636352211e146102f15780636f6717981461031157806370a082311461033e57806395d89b411461035e578063a22cb46514610373578063a4dcbd231461039357600080fd5b8063095ea7b311610108578063095ea7b31461021f57806314bfd6d01461024157806323b872dd1461026157806324d7806c1461028157806342842e0e146102b15780634b0bddd2146102d157600080fd5b806275a317146101435780629a9b7b1461016957806301ffc9a71461017f57806306fdde03146101af578063081812fc146101d1575b600080fd5b6101566101513660046113db565b610490565b6040519081526020015b60405180910390f35b34801561017557600080fd5b5061015660065481565b34801561018b57600080fd5b5061019f61019a366004611442565b610545565b6040519015158152602001610160565b3480156101bb57600080fd5b506101c4610597565b60405161016091906114a5565b3480156101dd57600080fd5b506102076101ec3660046114b8565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610160565b34801561022b57600080fd5b5061023f61023a3660046114d1565b610625565b005b34801561024d57600080fd5b5061020761025c3660046114b8565b610707565b34801561026d57600080fd5b5061023f61027c3660046114fb565b610731565b34801561028d57600080fd5b5061019f61029c366004611537565b60096020526000908152604090205460ff1681565b3480156102bd57600080fd5b5061023f6102cc3660046114fb565b6108f8565b3480156102dd57600080fd5b5061023f6102ec366004611552565b6109cd565b3480156102fd57600080fd5b5061020761030c3660046114b8565b610b47565b34801561031d57600080fd5b5061033161032c3660046115b2565b610b9e565b6040516101609190611648565b34801561034a57600080fd5b50610156610359366004611537565b610c57565b34801561036a57600080fd5b506101c4610cba565b34801561037f57600080fd5b5061023f61038e366004611552565b610cc7565b6103a66103a13660046116aa565b610d33565b6040516101609190611760565b3480156103bf57600080fd5b5061023f6103ce3660046117a4565b610e85565b3480156103df57600080fd5b506101c46103ee3660046114b8565b610f4a565b3480156103ff57600080fd5b50600854610207906001600160a01b031681565b34801561041f57600080fd5b5061043361042e3660046115b2565b61101c565b604051610160919061183f565b34801561044c57600080fd5b506104336110d0565b34801561046157600080fd5b5061019f610470366004611880565b600560209081526000928352604080842090915290825290205460ff1681565b3360009081526009602052604081205460ff166104e05760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b60448201526064015b60405180910390fd5b815160000361050257604051633ba0191160e01b815260040160405180910390fd5b6000600660008154610513906118b3565b918290555060008181526007602052604090209091506105338482611962565b5061053e8482611132565b9392505050565b60006301ffc9a760e01b6001600160e01b03198316148061057657506380ac58cd60e01b6001600160e01b03198316145b806105915750635b5e139f60e01b6001600160e01b03198316145b92915050565b600080546105a4906118da565b80601f01602080910402602001604051908101604052809291908181526020018280546105d0906118da565b801561061d5780601f106105f25761010080835404028352916020019161061d565b820191906000526020600020905b81548152906001019060200180831161060057829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061066e57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106ab5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016104d7565b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600a818154811061071757600080fd5b6000918252602090912001546001600160a01b0316905081565b6000818152600260205260409020546001600160a01b038481169116146107875760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016104d7565b6001600160a01b0382166107d15760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016104d7565b336001600160a01b038416148061080b57506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061082c57506000818152600460205260409020546001600160a01b031633145b6108695760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016104d7565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610903838383610731565b6001600160a01b0382163b15806109ac5750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af115801561097c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a09190611a22565b6001600160e01b031916145b6109c85760405162461bcd60e51b81526004016104d790611a3f565b505050565b6008546001600160a01b03163314610a1c5760405162461bcd60e51b81526020600482015260126024820152712737ba1031b7b73a3930b1ba1037bbb732b960711b60448201526064016104d7565b8015610a93576001600160a01b03821660009081526009602052604090205460ff16610a8e57600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0384161790555b610b1c565b60005b600a54811015610b1a57826001600160a01b0316600a8281548110610abd57610abd611a69565b6000918252602090912001546001600160a01b031603610b0857600a8181548110610aea57610aea611a69565b600091825260209091200180546001600160a01b0319169055610b1a565b80610b12816118b3565b915050610a96565b505b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6000818152600260205260409020546001600160a01b031680610b995760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016104d7565b919050565b60606000825167ffffffffffffffff811115610bbc57610bbc611324565b604051908082528060200260200182016040528015610bef57816020015b6060815260200190600190039081610bda5790505b50905060005b8351811015610c5057610c20848281518110610c1357610c13611a69565b6020026020010151610f4a565b828281518110610c3257610c32611a69565b60200260200101819052508080610c48906118b3565b915050610bf5565b5092915050565b60006001600160a01b038216610c9e5760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016104d7565b506001600160a01b031660009081526003602052604090205490565b600180546105a4906118da565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3360009081526009602052604090205460609060ff16610d815760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b60448201526064016104d7565b6000835167ffffffffffffffff811115610d9d57610d9d611324565b604051908082528060200260200182016040528015610dc6578160200160208202803683370190505b5090508251600003610deb57604051633ba0191160e01b815260040160405180910390fd5b60005b8451811015610e7d576000600660008154610e08906118b3565b91829055506000818152600760205260409020909150610e288682611962565b50610e4c868381518110610e3e57610e3e611a69565b602002602001015182611132565b80838381518110610e5f57610e5f611a69565b60209081029190910101525080610e75816118b3565b915050610dee565b509392505050565b610e90858585610731565b6001600160a01b0384163b1580610f275750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610ed89033908a90899089908990600401611a7f565b6020604051808303816000875af1158015610ef7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1b9190611a22565b6001600160e01b031916145b610f435760405162461bcd60e51b81526004016104d790611a3f565b5050505050565b60606000610f5783610b47565b6001600160a01b031603610f7e5760405163d872946b60e01b815260040160405180910390fd5b60008281526007602052604090208054610f97906118da565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc3906118da565b80156110105780601f10610fe557610100808354040283529160200191611010565b820191906000526020600020905b815481529060010190602001808311610ff357829003601f168201915b50505050509050919050565b60606000825167ffffffffffffffff81111561103a5761103a611324565b604051908082528060200260200182016040528015611063578160200160208202803683370190505b50905060005b8351811015610c505761109484828151811061108757611087611a69565b6020026020010151610b47565b8282815181106110a6576110a6611a69565b6001600160a01b0390921660209283029190910190910152806110c8816118b3565b915050611069565b6060600a80548060200260200160405190810160405280929190818152602001828054801561112857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161110a575b5050505050905090565b61113c8282611202565b6001600160a01b0382163b15806111e25750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af11580156111b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d69190611a22565b6001600160e01b031916145b6111fe5760405162461bcd60e51b81526004016104d790611a3f565b5050565b6001600160a01b03821661124c5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016104d7565b6000818152600260205260409020546001600160a01b0316156112a25760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016104d7565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b0381168114610b9957600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561136357611363611324565b604052919050565b600082601f83011261137c57600080fd5b813567ffffffffffffffff81111561139657611396611324565b6113a9601f8201601f191660200161133a565b8181528460208386010111156113be57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156113ee57600080fd5b6113f78361130d565b9150602083013567ffffffffffffffff81111561141357600080fd5b61141f8582860161136b565b9150509250929050565b6001600160e01b03198116811461143f57600080fd5b50565b60006020828403121561145457600080fd5b813561053e81611429565b6000815180845260005b8181101561148557602081850181015186830182015201611469565b506000602082860101526020601f19601f83011685010191505092915050565b60208152600061053e602083018461145f565b6000602082840312156114ca57600080fd5b5035919050565b600080604083850312156114e457600080fd5b6114ed8361130d565b946020939093013593505050565b60008060006060848603121561151057600080fd5b6115198461130d565b92506115276020850161130d565b9150604084013590509250925092565b60006020828403121561154957600080fd5b61053e8261130d565b6000806040838503121561156557600080fd5b61156e8361130d565b91506020830135801515811461158357600080fd5b809150509250929050565b600067ffffffffffffffff8211156115a8576115a8611324565b5060051b60200190565b600060208083850312156115c557600080fd5b823567ffffffffffffffff8111156115dc57600080fd5b8301601f810185136115ed57600080fd5b80356116006115fb8261158e565b61133a565b81815260059190911b8201830190838101908783111561161f57600080fd5b928401925b8284101561163d57833582529284019290840190611624565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561169d57603f1988860301845261168b85835161145f565b9450928501929085019060010161166f565b5092979650505050505050565b600080604083850312156116bd57600080fd5b823567ffffffffffffffff808211156116d557600080fd5b818501915085601f8301126116e957600080fd5b813560206116f96115fb8361158e565b82815260059290921b8401810191818101908984111561171857600080fd5b948201945b8386101561173d5761172e8661130d565b8252948201949082019061171d565b9650508601359250508082111561175357600080fd5b5061141f8582860161136b565b6020808252825182820181905260009190848201906040850190845b818110156117985783518352928401929184019160010161177c565b50909695505050505050565b6000806000806000608086880312156117bc57600080fd5b6117c58661130d565b94506117d36020870161130d565b935060408601359250606086013567ffffffffffffffff808211156117f757600080fd5b818801915088601f83011261180b57600080fd5b81358181111561181a57600080fd5b89602082850101111561182c57600080fd5b9699959850939650602001949392505050565b6020808252825182820181905260009190848201906040850190845b818110156117985783516001600160a01b03168352928401929184019160010161185b565b6000806040838503121561189357600080fd5b61189c8361130d565b91506118aa6020840161130d565b90509250929050565b6000600182016118d357634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806118ee57607f821691505b60208210810361190e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156109c857600081815260208120601f850160051c8101602086101561193b5750805b601f850160051c820191505b8181101561195a57828155600101611947565b505050505050565b815167ffffffffffffffff81111561197c5761197c611324565b6119908161198a84546118da565b84611914565b602080601f8311600181146119c557600084156119ad5750858301515b600019600386901b1c1916600185901b17855561195a565b600085815260208120601f198616915b828110156119f4578886015182559484019460019091019084016119d5565b5085821015611a125787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215611a3457600080fd5b815161053e81611429565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea264697066735822122023c70b8bd870d8a0afe78c97e4e6c6165495a9c1d45d479f73a04353a04e763a64736f6c63430008100033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<NFT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
