/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidURI",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentTokenURI",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "bulkMintTo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "bulkTokenURI",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "contractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAdmins",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d7c38038062001d7c83398101604081905262000034916200017e565b8181600062000044838262000277565b50600162000053828262000277565b5050600a805460018181019092557fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b031916339081179091556000908152600960205260409020805460ff191690911790555062000343915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000e157600080fd5b81516001600160401b0380821115620000fe57620000fe620000b9565b604051601f8301601f19908116603f01168101908282118183101715620001295762000129620000b9565b816040528381526020925086838588010111156200014657600080fd5b600091505b838210156200016a57858201830151818301840152908201906200014b565b600093810190920192909252949350505050565b600080604083850312156200019257600080fd5b82516001600160401b0380821115620001aa57600080fd5b620001b886838701620000cf565b93506020850151915080821115620001cf57600080fd5b50620001de85828601620000cf565b9150509250929050565b600181811c90821680620001fd57607f821691505b6020821081036200021e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200027257600081815260208120601f850160051c810160208610156200024d5750805b601f850160051c820191505b818110156200026e5782815560010162000259565b5050505b505050565b81516001600160401b03811115620002935762000293620000b9565b620002ab81620002a48454620001e8565b8462000224565b602080601f831160018114620002e35760008415620002ca5750858301515b600019600386901b1c1916600185901b1785556200026e565b600085815260208120601f198616915b828110156200031457888601518255948401946001909101908401620002f3565b5085821015620003335787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a2980620003536000396000f3fe6080604052600436106101335760003560e01c80636352211e116100ab578063a4dcbd231161006f578063a4dcbd2314610388578063b88d4fde146103a8578063c87b56dd146103c8578063ce606ee0146103e8578063e9523c9714610408578063e985e9c51461042a57600080fd5b80636352211e146102e65780636f6717981461030657806370a082311461033357806395d89b4114610353578063a22cb4651461036857600080fd5b8063095ea7b3116100fd578063095ea7b31461021457806314bfd6d01461023657806323b872dd1461025657806324d7806c1461027657806342842e0e146102a65780634b0bddd2146102c657600080fd5b806275a317146101385780629a9b7b1461015e57806301ffc9a71461017457806306fdde03146101a4578063081812fc146101c6575b600080fd5b61014b6101463660046112fb565b610465565b6040519081526020015b60405180910390f35b34801561016a57600080fd5b5061014b60065481565b34801561018057600080fd5b5061019461018f366004611362565b61051a565b6040519015158152602001610155565b3480156101b057600080fd5b506101b961056c565b60405161015591906113c5565b3480156101d257600080fd5b506101fc6101e13660046113d8565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610155565b34801561022057600080fd5b5061023461022f3660046113f1565b6105fa565b005b34801561024257600080fd5b506101fc6102513660046113d8565b6106dc565b34801561026257600080fd5b5061023461027136600461141b565b610706565b34801561028257600080fd5b50610194610291366004611457565b60096020526000908152604090205460ff1681565b3480156102b257600080fd5b506102346102c136600461141b565b6108cd565b3480156102d257600080fd5b506102346102e1366004611472565b6109a2565b3480156102f257600080fd5b506101fc6103013660046113d8565b610b1c565b34801561031257600080fd5b506103266103213660046114d2565b610b73565b6040516101559190611568565b34801561033f57600080fd5b5061014b61034e366004611457565b610c2b565b34801561035f57600080fd5b506101b9610c8e565b34801561037457600080fd5b50610234610383366004611472565b610c9b565b61039b6103963660046115ca565b610d07565b6040516101559190611680565b3480156103b457600080fd5b506102346103c33660046116c4565b610e59565b3480156103d457600080fd5b506101b96103e33660046113d8565b610f1e565b3480156103f457600080fd5b506008546101fc906001600160a01b031681565b34801561041457600080fd5b5061041d610ff0565b604051610155919061175f565b34801561043657600080fd5b506101946104453660046117a0565b600560209081526000928352604080842090915290825290205460ff1681565b3360009081526009602052604081205460ff166104b55760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b60448201526064015b60405180910390fd5b81516000036104d757604051633ba0191160e01b815260040160405180910390fd5b60006006600081546104e8906117d3565b918290555060008181526007602052604090209091506105088482611882565b506105138482611052565b9392505050565b60006301ffc9a760e01b6001600160e01b03198316148061054b57506380ac58cd60e01b6001600160e01b03198316145b806105665750635b5e139f60e01b6001600160e01b03198316145b92915050565b60008054610579906117fa565b80601f01602080910402602001604051908101604052809291908181526020018280546105a5906117fa565b80156105f25780601f106105c7576101008083540402835291602001916105f2565b820191906000526020600020905b8154815290600101906020018083116105d557829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061064357506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106805760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016104ac565b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600a81815481106106ec57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000818152600260205260409020546001600160a01b0384811691161461075c5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016104ac565b6001600160a01b0382166107a65760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016104ac565b336001600160a01b03841614806107e057506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b8061080157506000818152600460205260409020546001600160a01b031633145b61083e5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016104ac565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108d8838383610706565b6001600160a01b0382163b15806109815750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610951573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109759190611942565b6001600160e01b031916145b61099d5760405162461bcd60e51b81526004016104ac9061195f565b505050565b6008546001600160a01b031633146109f15760405162461bcd60e51b81526020600482015260126024820152712737ba1031b7b73a3930b1ba1037bbb732b960711b60448201526064016104ac565b8015610a68576001600160a01b03821660009081526009602052604090205460ff16610a6357600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0384161790555b610af1565b60005b600a54811015610aef57826001600160a01b0316600a8281548110610a9257610a92611989565b6000918252602090912001546001600160a01b031603610add57600a8181548110610abf57610abf611989565b600091825260209091200180546001600160a01b0319169055610aef565b80610ae7816117d3565b915050610a6b565b505b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6000818152600260205260409020546001600160a01b031680610b6e5760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b60448201526064016104ac565b919050565b60606000825167ffffffffffffffff811115610b9157610b91611244565b604051908082528060200260200182016040528015610bc457816020015b6060815260200190600190039081610baf5790505b50905060005b83518111610c2457610bf4848281518110610be757610be7611989565b6020026020010151610f1e565b828281518110610c0657610c06611989565b60200260200101819052508080610c1c906117d3565b915050610bca565b5092915050565b60006001600160a01b038216610c725760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b60448201526064016104ac565b506001600160a01b031660009081526003602052604090205490565b60018054610579906117fa565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3360009081526009602052604090205460609060ff16610d555760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b60448201526064016104ac565b6000835167ffffffffffffffff811115610d7157610d71611244565b604051908082528060200260200182016040528015610d9a578160200160208202803683370190505b5090508251600003610dbf57604051633ba0191160e01b815260040160405180910390fd5b60005b8451811015610e51576000600660008154610ddc906117d3565b91829055506000818152600760205260409020909150610dfc8682611882565b50610e20868381518110610e1257610e12611989565b602002602001015182611052565b80838381518110610e3357610e33611989565b60209081029190910101525080610e49816117d3565b915050610dc2565b509392505050565b610e64858585610706565b6001600160a01b0384163b1580610efb5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610eac9033908a9089908990899060040161199f565b6020604051808303816000875af1158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190611942565b6001600160e01b031916145b610f175760405162461bcd60e51b81526004016104ac9061195f565b5050505050565b60606000610f2b83610b1c565b6001600160a01b031603610f525760405163d872946b60e01b815260040160405180910390fd5b60008281526007602052604090208054610f6b906117fa565b80601f0160208091040260200160405190810160405280929190818152602001828054610f97906117fa565b8015610fe45780601f10610fb957610100808354040283529160200191610fe4565b820191906000526020600020905b815481529060010190602001808311610fc757829003601f168201915b50505050509050919050565b6060600a80548060200260200160405190810160405280929190818152602001828054801561104857602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161102a575b5050505050905090565b61105c8282611122565b6001600160a01b0382163b15806111025750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af11580156110d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f69190611942565b6001600160e01b031916145b61111e5760405162461bcd60e51b81526004016104ac9061195f565b5050565b6001600160a01b03821661116c5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016104ac565b6000818152600260205260409020546001600160a01b0316156111c25760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b60448201526064016104ac565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b0381168114610b6e57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561128357611283611244565b604052919050565b600082601f83011261129c57600080fd5b813567ffffffffffffffff8111156112b6576112b6611244565b6112c9601f8201601f191660200161125a565b8181528460208386010111156112de57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561130e57600080fd5b6113178361122d565b9150602083013567ffffffffffffffff81111561133357600080fd5b61133f8582860161128b565b9150509250929050565b6001600160e01b03198116811461135f57600080fd5b50565b60006020828403121561137457600080fd5b813561051381611349565b6000815180845260005b818110156113a557602081850181015186830182015201611389565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610513602083018461137f565b6000602082840312156113ea57600080fd5b5035919050565b6000806040838503121561140457600080fd5b61140d8361122d565b946020939093013593505050565b60008060006060848603121561143057600080fd5b6114398461122d565b92506114476020850161122d565b9150604084013590509250925092565b60006020828403121561146957600080fd5b6105138261122d565b6000806040838503121561148557600080fd5b61148e8361122d565b9150602083013580151581146114a357600080fd5b809150509250929050565b600067ffffffffffffffff8211156114c8576114c8611244565b5060051b60200190565b600060208083850312156114e557600080fd5b823567ffffffffffffffff8111156114fc57600080fd5b8301601f8101851361150d57600080fd5b803561152061151b826114ae565b61125a565b81815260059190911b8201830190838101908783111561153f57600080fd5b928401925b8284101561155d57833582529284019290840190611544565b979650505050505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156115bd57603f198886030184526115ab85835161137f565b9450928501929085019060010161158f565b5092979650505050505050565b600080604083850312156115dd57600080fd5b823567ffffffffffffffff808211156115f557600080fd5b818501915085601f83011261160957600080fd5b8135602061161961151b836114ae565b82815260059290921b8401810191818101908984111561163857600080fd5b948201945b8386101561165d5761164e8661122d565b8252948201949082019061163d565b9650508601359250508082111561167357600080fd5b5061133f8582860161128b565b6020808252825182820181905260009190848201906040850190845b818110156116b85783518352928401929184019160010161169c565b50909695505050505050565b6000806000806000608086880312156116dc57600080fd5b6116e58661122d565b94506116f36020870161122d565b935060408601359250606086013567ffffffffffffffff8082111561171757600080fd5b818801915088601f83011261172b57600080fd5b81358181111561173a57600080fd5b89602082850101111561174c57600080fd5b9699959850939650602001949392505050565b6020808252825182820181905260009190848201906040850190845b818110156116b85783516001600160a01b03168352928401929184019160010161177b565b600080604083850312156117b357600080fd5b6117bc8361122d565b91506117ca6020840161122d565b90509250929050565b6000600182016117f357634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061180e57607f821691505b60208210810361182e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561099d57600081815260208120601f850160051c8101602086101561185b5750805b601f850160051c820191505b8181101561187a57828155600101611867565b505050505050565b815167ffffffffffffffff81111561189c5761189c611244565b6118b0816118aa84546117fa565b84611834565b602080601f8311600181146118e557600084156118cd5750858301515b600019600386901b1c1916600185901b17855561187a565b600085815260208120601f198616915b82811015611914578886015182559484019460019091019084016118f5565b50858210156119325787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561195457600080fd5b815161051381611349565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea2646970667358221220c02fc302689bbd881442f76c46c6b1c53b150ef50c4386b6ce88f58c0a1479c564736f6c63430008100033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<NFT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
