/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { NFT, NFTInterface } from "../NFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidURI",
    type: "error",
  },
  {
    inputs: [],
    name: "NonExistentTokenURI",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "bulkMintTo",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "contractOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllAdmins",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "setAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001b1938038062001b19833981016040819052620000349162000123565b818160006200004483826200021c565b5060016200005382826200021c565b5050505050620002e8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008657600080fd5b81516001600160401b0380821115620000a357620000a36200005e565b604051601f8301601f19908116603f01168101908282118183101715620000ce57620000ce6200005e565b81604052838152602092508683858801011115620000eb57600080fd5b600091505b838210156200010f5785820183015181830184015290820190620000f0565b600093810190920192909252949350505050565b600080604083850312156200013757600080fd5b82516001600160401b03808211156200014f57600080fd5b6200015d8683870162000074565b935060208501519150808211156200017457600080fd5b50620001838582860162000074565b9150509250929050565b600181811c90821680620001a257607f821691505b602082108103620001c357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021757600081815260208120601f850160051c81016020861015620001f25750805b601f850160051c820191505b818110156200021357828155600101620001fe565b5050505b505050565b81516001600160401b038111156200023857620002386200005e565b62000250816200024984546200018d565b84620001c9565b602080601f8311600181146200028857600084156200026f5750858301515b600019600386901b1c1916600185901b17855562000213565b600085815260208120601f198616915b82811015620002b95788860151825594840194600190910190840162000298565b5085821015620002d85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61182180620002f86000396000f3fe6080604052600436106101285760003560e01c80634b0bddd2116100ab578063a4dcbd231161006f578063a4dcbd2314610350578063b88d4fde14610370578063c87b56dd14610390578063ce606ee0146103b0578063e9523c97146103d0578063e985e9c5146103f257600080fd5b80634b0bddd2146102bb5780636352211e146102db57806370a08231146102fb57806395d89b411461031b578063a22cb4651461033057600080fd5b8063095ea7b3116100f2578063095ea7b31461020957806314bfd6d01461022b57806323b872dd1461024b57806324d7806c1461026b57806342842e0e1461029b57600080fd5b806275a3171461012d5780629a9b7b1461015357806301ffc9a71461016957806306fdde0314610199578063081812fc146101bb575b600080fd5b61014061013b36600461120b565b61042d565b6040519081526020015b60405180910390f35b34801561015f57600080fd5b5061014060065481565b34801561017557600080fd5b50610189610184366004611272565b6104e2565b604051901515815260200161014a565b3480156101a557600080fd5b506101ae610534565b60405161014a919061128f565b3480156101c757600080fd5b506101f16101d63660046112dd565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161014a565b34801561021557600080fd5b506102296102243660046112f6565b6105c2565b005b34801561023757600080fd5b506101f16102463660046112dd565b6106a4565b34801561025757600080fd5b50610229610266366004611320565b6106ce565b34801561027757600080fd5b5061018961028636600461135c565b60096020526000908152604090205460ff1681565b3480156102a757600080fd5b506102296102b6366004611320565b610895565b3480156102c757600080fd5b506102296102d6366004611377565b61096a565b3480156102e757600080fd5b506101f16102f63660046112dd565b610ae4565b34801561030757600080fd5b5061014061031636600461135c565b610b3b565b34801561032757600080fd5b506101ae610b9e565b34801561033c57600080fd5b5061022961034b366004611377565b610bab565b61036361035e3660046113b3565b610c17565b60405161014a9190611478565b34801561037c57600080fd5b5061022961038b3660046114bc565b610d69565b34801561039c57600080fd5b506101ae6103ab3660046112dd565b610e2e565b3480156103bc57600080fd5b506008546101f1906001600160a01b031681565b3480156103dc57600080fd5b506103e5610f00565b60405161014a9190611557565b3480156103fe57600080fd5b5061018961040d366004611598565b600560209081526000928352604080842090915290825290205460ff1681565b3360009081526009602052604081205460ff1661047d5760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b60448201526064015b60405180910390fd5b815160000361049f57604051633ba0191160e01b815260040160405180910390fd5b60006006600081546104b0906115cb565b918290555060008181526007602052604090209091506104d0848261167a565b506104db8482610f62565b9392505050565b60006301ffc9a760e01b6001600160e01b03198316148061051357506380ac58cd60e01b6001600160e01b03198316145b8061052e5750635b5e139f60e01b6001600160e01b03198316145b92915050565b60008054610541906115f2565b80601f016020809104026020016040519081016040528092919081815260200182805461056d906115f2565b80156105ba5780601f1061058f576101008083540402835291602001916105ba565b820191906000526020600020905b81548152906001019060200180831161059d57829003601f168201915b505050505081565b6000818152600260205260409020546001600160a01b03163381148061060b57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b6106485760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610474565b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b600a81815481106106b457600080fd5b6000918252602090912001546001600160a01b0316905081565b6000818152600260205260409020546001600160a01b038481169116146107245760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610474565b6001600160a01b03821661076e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610474565b336001600160a01b03841614806107a857506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b806107c957506000818152600460205260409020546001600160a01b031633145b6108065760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610474565b6001600160a01b0380841660008181526003602090815260408083208054600019019055938616808352848320805460010190558583526002825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108a08383836106ce565b6001600160a01b0382163b15806109495750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af1158015610919573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093d919061173a565b6001600160e01b031916145b6109655760405162461bcd60e51b815260040161047490611757565b505050565b6008546001600160a01b031633146109b95760405162461bcd60e51b81526020600482015260126024820152712737ba1031b7b73a3930b1ba1037bbb732b960711b6044820152606401610474565b8015610a30576001600160a01b03821660009081526009602052604090205460ff16610a2b57600a80546001810182556000919091527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80180546001600160a01b0319166001600160a01b0384161790555b610ab9565b60005b600a54811015610ab757826001600160a01b0316600a8281548110610a5a57610a5a611781565b6000918252602090912001546001600160a01b031603610aa557600a8181548110610a8757610a87611781565b600091825260209091200180546001600160a01b0319169055610ab7565b80610aaf816115cb565b915050610a33565b505b6001600160a01b03919091166000908152600960205260409020805460ff1916911515919091179055565b6000818152600260205260409020546001600160a01b031680610b365760405162461bcd60e51b815260206004820152600a6024820152691393d517d3525395115160b21b6044820152606401610474565b919050565b60006001600160a01b038216610b825760405162461bcd60e51b815260206004820152600c60248201526b5a45524f5f4144445245535360a01b6044820152606401610474565b506001600160a01b031660009081526003602052604090205490565b60018054610541906115f2565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b3360009081526009602052604090205460609060ff16610c655760405162461bcd60e51b81526020600482015260096024820152682737ba1030b236b4b760b91b6044820152606401610474565b6000835167ffffffffffffffff811115610c8157610c81611154565b604051908082528060200260200182016040528015610caa578160200160208202803683370190505b5090508251600003610ccf57604051633ba0191160e01b815260040160405180910390fd5b60005b8451811015610d61576000600660008154610cec906115cb565b91829055506000818152600760205260409020909150610d0c868261167a565b50610d30868381518110610d2257610d22611781565b602002602001015182610f62565b80838381518110610d4357610d43611781565b60209081029190910101525080610d59816115cb565b915050610cd2565b509392505050565b610d748585856106ce565b6001600160a01b0384163b1580610e0b5750604051630a85bd0160e11b808252906001600160a01b0386169063150b7a0290610dbc9033908a90899089908990600401611797565b6020604051808303816000875af1158015610ddb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dff919061173a565b6001600160e01b031916145b610e275760405162461bcd60e51b815260040161047490611757565b5050505050565b60606000610e3b83610ae4565b6001600160a01b031603610e625760405163d872946b60e01b815260040160405180910390fd5b60008281526007602052604090208054610e7b906115f2565b80601f0160208091040260200160405190810160405280929190818152602001828054610ea7906115f2565b8015610ef45780601f10610ec957610100808354040283529160200191610ef4565b820191906000526020600020905b815481529060010190602001808311610ed757829003601f168201915b50505050509050919050565b6060600a805480602002602001604051908101604052809291908181526020018280548015610f5857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610f3a575b5050505050905090565b610f6c8282611032565b6001600160a01b0382163b15806110125750604051630a85bd0160e11b80825233600483015260006024830181905260448301849052608060648401526084830152906001600160a01b0384169063150b7a029060a4016020604051808303816000875af1158015610fe2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611006919061173a565b6001600160e01b031916145b61102e5760405162461bcd60e51b815260040161047490611757565b5050565b6001600160a01b03821661107c5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610474565b6000818152600260205260409020546001600160a01b0316156110d25760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610474565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b80356001600160a01b0381168114610b3657600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561119357611193611154565b604052919050565b600082601f8301126111ac57600080fd5b813567ffffffffffffffff8111156111c6576111c6611154565b6111d9601f8201601f191660200161116a565b8181528460208386010111156111ee57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561121e57600080fd5b6112278361113d565b9150602083013567ffffffffffffffff81111561124357600080fd5b61124f8582860161119b565b9150509250929050565b6001600160e01b03198116811461126f57600080fd5b50565b60006020828403121561128457600080fd5b81356104db81611259565b600060208083528351808285015260005b818110156112bc578581018301518582016040015282016112a0565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156112ef57600080fd5b5035919050565b6000806040838503121561130957600080fd5b6113128361113d565b946020939093013593505050565b60008060006060848603121561133557600080fd5b61133e8461113d565b925061134c6020850161113d565b9150604084013590509250925092565b60006020828403121561136e57600080fd5b6104db8261113d565b6000806040838503121561138a57600080fd5b6113938361113d565b9150602083013580151581146113a857600080fd5b809150509250929050565b600080604083850312156113c657600080fd5b823567ffffffffffffffff808211156113de57600080fd5b818501915085601f8301126113f257600080fd5b813560208282111561140657611406611154565b8160051b61141582820161116a565b928352848101820192828101908a85111561142f57600080fd5b958301955b84871015611454576114458761113d565b82529583019590830190611434565b975050508601359250508082111561146b57600080fd5b5061124f8582860161119b565b6020808252825182820181905260009190848201906040850190845b818110156114b057835183529284019291840191600101611494565b50909695505050505050565b6000806000806000608086880312156114d457600080fd5b6114dd8661113d565b94506114eb6020870161113d565b935060408601359250606086013567ffffffffffffffff8082111561150f57600080fd5b818801915088601f83011261152357600080fd5b81358181111561153257600080fd5b89602082850101111561154457600080fd5b9699959850939650602001949392505050565b6020808252825182820181905260009190848201906040850190845b818110156114b05783516001600160a01b031683529284019291840191600101611573565b600080604083850312156115ab57600080fd5b6115b48361113d565b91506115c26020840161113d565b90509250929050565b6000600182016115eb57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061160657607f821691505b60208210810361162657634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561096557600081815260208120601f850160051c810160208610156116535750805b601f850160051c820191505b818110156116725782815560010161165f565b505050505050565b815167ffffffffffffffff81111561169457611694611154565b6116a8816116a284546115f2565b8461162c565b602080601f8311600181146116dd57600084156116c55750858301515b600019600386901b1c1916600185901b178555611672565b600085815260208120601f198616915b8281101561170c578886015182559484019460019091019084016116ed565b508582101561172a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561174c57600080fd5b81516104db81611259565b60208082526010908201526f155394d0519157d49150d2541251539560821b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038681168252851660208201526040810184905260806060820181905281018290526000828460a0840137600060a0848401015260a0601f19601f8501168301019050969550505050505056fea2646970667358221220164e0db060dd32f28fa49e3bf6314c0a2a3c44c0d4e242997cdd29d012cf04d764736f6c63430008100033";

type NFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFT__factory extends ContractFactory {
  constructor(...args: NFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<NFT> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<NFT>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  override attach(address: string): NFT {
    return super.attach(address) as NFT;
  }
  override connect(signer: Signer): NFT__factory {
    return super.connect(signer) as NFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTInterface {
    return new utils.Interface(_abi) as NFTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): NFT {
    return new Contract(address, _abi, signerOrProvider) as NFT;
  }
}
